(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{388:function(a,t,v){"use strict";v.r(t);var e=v(19),_=Object(e.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h2",{attrs:{id:"transform-变形"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#transform-变形"}},[a._v("#")]),a._v(" transform 变形")]),a._v(" "),v("blockquote",[v("p",[a._v("所有变形都是相对元素自己的参照系实施的。")])]),a._v(" "),v("ol",[v("li",[a._v("变形函数一次只处理一个，从第一个开始，到最后一个结束。")]),a._v(" "),v("li",[a._v("从头到尾的执行顺序很重要。\n"),v("ol",[v("li",[a._v("先平移再旋转和先旋转再平移是不一样的。"),v("strong",[a._v("因为变形是相对于元素自己的参照系实施的")])])])]),a._v(" "),v("li",[a._v("有多个变形函数时，如果有一个值时无效的，整个值都将失效。")]),a._v(" "),v("li",[a._v("针对同一个元素，同时设置了两次变形函数，是不会叠加的。")])]),a._v(" "),v("h3",{attrs:{id:"平移函数-translate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#平移函数-translate"}},[a._v("#")]),a._v(" 平移函数 translate")]),a._v(" "),v("ul",[v("li",[a._v("translateX(x) 正值向左 负值向右")]),a._v(" "),v("li",[a._v("translateY(y) 正值向下 负值向上")]),a._v(" "),v("li",[a._v("translateZ(z) 正值向前 负值向后")]),a._v(" "),v("li",[a._v("translate(x,y)")]),a._v(" "),v("li",[a._v("translate3d(x,y,z)")])]),a._v(" "),v("ol",[v("li",[a._v("translateX 和 translateY 被称为 2D 平移函数。")]),a._v(" "),v("li",[a._v("函数的取值和单位\n"),v("ol",[v("li",[a._v("值为长度时，元素相对于元素自身的轴进行移动。")]),a._v(" "),v("li",[a._v("值为百分比时，移动的距离相对元素自身的尺寸计算。")]),a._v(" "),v("li",[a._v("2d 平移函数如果未设置为其他单位，就是像素。")]),a._v(" "),v("li",[a._v("translateZ 函数只接受长度值。不允许使用百分值。")])])]),a._v(" "),v("li",[a._v("默认值\n"),v("ol",[v("li",[a._v("translate 函数不传第二个参数，默认是0。")]),a._v(" "),v("li",[a._v("translate3d 函数参数少于三个，没有默认值，浏览器会将函数视为无效。")])])])]),a._v(" "),v("h3",{attrs:{id:"缩放函数-scale"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缩放函数-scale"}},[a._v("#")]),a._v(" 缩放函数 scale")]),a._v(" "),v("ul",[v("li",[a._v("scaleX(a) 宽度 * a")]),a._v(" "),v("li",[a._v("scaleY(a) 高度 * a")]),a._v(" "),v("li",[a._v("scaleZ(a)")]),a._v(" "),v("li",[a._v("scale(a,a)")]),a._v(" "),v("li",[a._v("scale3d(a,a,a)")])]),a._v(" "),v("ol",[v("li",[a._v("函数参数是无单位的实数。而且始终未整数。"),v("strong",[a._v("不能使用百分比")])]),a._v(" "),v("li",[a._v("scale 接收两个参数，如果只传一个参数，默认指在 x 和 y 缩放同样的比列。")]),a._v(" "),v("li",[a._v("scaleZ 和 scale3d 只有元素有景深的时候才有效果。")]),a._v(" "),v("li",[a._v("scale3d 的三个数必须是有效的。如若不然，无效的 scale3d 将导致所属的整个变形值无效。")])]),a._v(" "),v("h3",{attrs:{id:"旋转函数-rotate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#旋转函数-rotate"}},[a._v("#")]),a._v(" 旋转函数 rotate")]),a._v(" "),v("ul",[v("li",[a._v("rotate()")]),a._v(" "),v("li",[a._v("rotateX(11deg) 绕着 x 轴顺时针旋转 11 度")]),a._v(" "),v("li",[a._v("rotateY() 绕着 y 轴旋转")]),a._v(" "),v("li",[a._v("rotateZ() 绕着 z 轴旋转")])]),a._v(" "),v("ol",[v("li",[a._v("函数的参数都接受一个值，即角度。角度值以一个数字（可正可负）和一个有效的角度单位（deg，grad,rad和turn）表示。如果数字超出了相应单位的常规范围，将化为有效范围的值。")])]),a._v(" "),v("h3",{attrs:{id:"倾斜函数-skew"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#倾斜函数-skew"}},[a._v("#")]),a._v(" 倾斜函数 skew")]),a._v(" "),v("p",[a._v("将函数沿着 X 轴和 Y 轴倾斜元素。")]),a._v(" "),v("ul",[v("li",[a._v("skewX()")]),a._v(" "),v("li",[a._v("skewY()")]),a._v(" "),v("li",[a._v("skew()")])]),a._v(" "),v("ol",[v("li",[a._v("函数的参数都接受一个值，即角度。")])]),a._v(" "),v("h3",{attrs:{id:"视域函数-perspective"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#视域函数-perspective"}},[a._v("#")]),a._v(" 视域函数 perspective")]),a._v(" "),v("ol",[v("li",[a._v("值必须是整数。\n值越小，相当于距离物体越近，就像在元素跟前通过鱼眼镜头看一样。\n值越大，看到的越广，就像从远处通过变焦镜头看元素一样。")]),a._v(" "),v("li",[a._v("perspective 函数必须放到首位。")])]),a._v(" "),v("h3",{attrs:{id:"矩阵函数-matrix"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#矩阵函数-matrix"}},[a._v("#")]),a._v(" 矩阵函数 matrix")]),a._v(" "),v("h2",{attrs:{id:"修改视域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修改视域"}},[a._v("#")]),a._v(" 修改视域")]),a._v(" "),v("p",[a._v("perspective 属性与 perspective() 函数之间重要的区别，前者创建的 3d 空间为所有子元素共有，而后者只针对目标元素有效。而且，为了让 3d 空间中的变形有视觉效果，要把 perspective（） 函数放在函数列表的开头或前部。")]),a._v(" "),v("h2",{attrs:{id:"处理背面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#处理背面"}},[a._v("#")]),a._v(" 处理背面")]),a._v(" "),v("p",[a._v("backface-visibility: visible | hidden\n使用场景：翻转效果。当使用 rotate 函数进行 180 度大翻转时，会看到所翻转元素的背面。设置为 hidden 可以让元素的背面朝向我们时不渲染背面。\n"),v("strong",[a._v("需要给元素或其父元素添加属性 transform-style: preserve-3d;否则看不见效果")])])])}),[],!1,null,null,null);t.default=_.exports}}]);